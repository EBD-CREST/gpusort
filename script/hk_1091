#!/bin/bash
source config.sh
cd $bin_test_dir
$RM
gpu=true
file_name=`basename $0`
name_of_algorithm="hyk_sort"
number_process=$[16 * np_on_each_node]
data_zise=$[512 * number_process]
foo=$[n_cores / np_on_each_node]

echo "****************Running file $file_name*********************" >> $stdout_file
echo "************************************************************" >> $stdout_file
echo ""  >> $stdout_file
while getopts "a:g:" opt; do
  case $opt in
    g)
      gpu=$OPTARG >&2
      ;;
    a)
      name_of_algorithm=$OPTARG >&2
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

./test_key_value -d -r -g true -v "ap, a1=1,d=3 : ap, a1=4,d=1 : ap , a1=3, d = 9 : ap, a1=-2, d=4 : ap, a1 = -5, d=11: ap, a1 = 5, d=13 : ap, a1=11, d=4 : ap, a1=3, d=2" $number_process $data_zise$type_size $gen_data_dir 1>> $stdout_file 2>> $error_file

host=${list_hosts[0]}
for i in {1..15}
do
  host="$host,${list_hosts[i]}"
done

mpirun -np $number_process $host_tag $host ./test_key_value -a $name_of_algorithm -n $foo -r -g true -k 16 -v "ap, a1=1,d=3: ap, a1=4,d=1 : ap , a1=3, d = 9: ap, a1=-2, d=4 : ap, a1 = -5, d=11 : ap, a1 = 5, d=13 : ap, a1=11, d=4: ap, a1=3,d=2" $gen_data_dir 1>> $stdout_file 2>> $error_file

result=$?

if [ $result == 0 ]
then
  notification="$file_name 's success"
  echo $notification >> $result_file
  exit 0
else
  notification="$file_name 's failure"
  echo $notification >> $result_file
    echo "******************Finished $file_name*********************" >> $error_file
  echo "***********************************************************" >> $error_file

  exit 1
fi
